/*
* The maze is manually defined currently
* May 2023
*/
#ifndef MAZE_H
#define MAZE_H

#include <SPI.h>
#include <TFT_eSPI.h> // Graphics and font library for ST7789 driver chip

#include "amaze_generic.h"


// Function prototypes
void maze_init();
void draw_maze();

#define screenWidth VIEW_WIDTH//640
#define screenHeight VIEW_HEIGHT//480
#define mapWidth 21
#define mapHeight 21

#define START_X 19.5 // Start in the middle of the tile
#define START_Y 19.5

#define MAZE_PIXELS_PER_CELL (VIEW_WIDTH/mapWidth)

#define MAX_MAZE_CHOICES 2 // How many maze arrays / worlds are there?

// WORLD MAP format
// Lowest order 3 bits gives 7 colours or textures
// Bit 4 set for texture
// Bit 5 set to define wall
// Bit 6 set to define a target that initiates action - eg exit
#define MAP_WALL_FLAG    0x10 // Set to be a wall
#define MAP_TEXTURE_FLAG 0x08 // Set for texture, cleared means it is a colour
#define MAP_CHOICE_MASK  0x07 // lowest 3 bits give a choice of 8 textures and colours
#define MAP_TARGET_FLAG  0x20 // set to be the portal - note this is independent of its texture or colour
// Leaves high bits for 'expansion' 

// Could this be set to uint8_t to save a little memory?
uint16_t worldMap[MAX_MAZE_CHOICES][mapWidth][mapHeight]=
{
{// The maze has been stripped back to be easier and open
  {0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11}, // 1
  {0x3e,0x0b,0x1d,0x0b,0x0b,0x09,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x1a,0x0b,0x0b,0x0b,0x09,0x0b,0x0b,0x0b,0x11}, // 2
  {0x11,0x0b,0x1d,0x0b,0x09,0x0b,0x09,0x0b,0x09,0x09,0x09,0x09,0x09,0x0b,0x1d,0x0b,0x09,0x1d,0x1d,0x0b,0x11}, // 3
  {0x11,0x09,0x0b,0x0b,0x09,0x0b,0x09,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x1d,0x0b,0x0b,0x0b,0x0b,0x0b,0x11}, // 4
  {0x11,0x09,0x09,0x0b,0x09,0x0b,0x09,0x0b,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x0b,0x09,0x0b,0x09,0x0b,0x11}, // 5
  {0x11,0x0b,0x09,0x0b,0x09,0x0b,0x09,0x0b,0x0b,0x0b,0x09,0x0b,0x09,0x0b,0x0b,0x0b,0x09,0x0b,0x09,0x0b,0x3e}, // 6
  {0x11,0x0b,0x09,0x09,0x09,0x0b,0x09,0x09,0x09,0x09,0x09,0x0b,0x09,0x09,0x09,0x09,0x09,0x0b,0x09,0x0b,0x11}, // 7
  {0x11,0x0b,0x0b,0x09,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x09,0x0b,0x09,0x0b,0x11}, // 8
  {0x11,0x1d,0x1d,0x0b,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x0b,0x09,0x0b,0x1d,0x0b,0x09,0x0b,0x09,0x1a,0x11}, // 9
  {0x11,0x0b,0x0b,0x0b,0x0b,0x0b,0x1a,0x0b,0x0b,0x0b,0x0b,0x0b,0x09,0x0b,0x1d,0x0b,0x09,0x0b,0x0b,0x0b,0x11}, // 10
  {0x11,0x09,0x09,0x0b,0x1d,0x1d,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x1d,0x1d,0x0b,0x09,0x0b,0x1d,0x1d,0x11}, // 11
  {0x11,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x09,0x0b,0x0b,0x0b,0x09,0x0b,0x0b,0x0b,0x11}, // 12
  {0x11,0x0b,0x09,0x0b,0x1d,0x0b,0x09,0x1a,0x09,0x0b,0x1d,0x1d,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x0b,0x11}, // 13
  {0x11,0x0b,0x09,0x0b,0x1d,0x0b,0x09,0x0b,0x09,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x09,0x1A,0x11}, // 14
  {0x11,0x0b,0x09,0x0b,0x09,0x09,0x09,0x0b,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x0b,0x09,0x0b,0x11}, // 15
  {0x11,0x0b,0x09,0x0b,0x0b,0x0b,0x09,0x0b,0x09,0x0b,0x0b,0x0b,0x0b,0x0b,0x09,0x0b,0x0b,0x0b,0x09,0x0b,0x11}, // 16
  {0x11,0x0b,0x09,0x0b,0x1d,0x1d,0x09,0x0b,0x09,0x0b,0x1d,0x1d,0x09,0x0b,0x09,0x09,0x09,0x09,0x09,0x0b,0x11}, // 17
  {0x11,0x0b,0x09,0x09,0x0b,0x0b,0x0b,0x0b,0x09,0x0b,0x0b,0x0b,0x09,0x0b,0x0b,0x0b,0x1d,0x0b,0x09,0x0b,0x11}, // 18
  {0x11,0x0b,0x09,0x09,0x09,0x0b,0x09,0x09,0x09,0x09,0x09,0x09,0x09,0x0b,0x1d,0x0b,0x1d,0x0b,0x09,0x0b,0x11}, // 19
  {0x11,0x0b,0x0b,0x0b,0x09,0x09,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x1d,0x09,0x0b,0x0b,0x0b,0x00,0x11}, // 20
  {0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11}  // 21
},
{// This proper maze was generated as a MEDIUM at http://jamisbuck.org/mazes/minecraft.html
  {0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11}, // 1
  {0x3e,0x00,0x1d,0x00,0x00,0x09,0x00,0x00,0x00,0x00,0x00,0x00,0x1a,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x11}, // 2
  {0x11,0x00,0x1d,0x00,0x12,0x00,0x12,0x00,0x12,0x12,0x12,0x12,0x12,0x00,0x1d,0x00,0x12,0x1d,0x1d,0x00,0x11}, // 3
  {0x11,0x09,0x00,0x00,0x12,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1d,0x00,0x00,0x00,0x00,0x00,0x11}, // 4
  {0x11,0x12,0x12,0x00,0x12,0x00,0x12,0x00,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x00,0x12,0x00,0x12,0x00,0x11}, // 5
  {0x11,0x00,0x12,0x00,0x12,0x00,0x12,0x00,0x00,0x00,0x12,0x00,0x12,0x00,0x00,0x00,0x12,0x00,0x12,0x00,0x11}, // 6
  {0x11,0x00,0x12,0x12,0x12,0x00,0x12,0x12,0x12,0x12,0x12,0x00,0x12,0x12,0x12,0x12,0x12,0x00,0x12,0x00,0x11}, // 7
  {0x11,0x00,0x00,0x09,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x12,0x00,0x11}, // 8
  {0x11,0x1d,0x1d,0x00,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x00,0x12,0x00,0x1d,0x00,0x12,0x00,0x12,0x1a,0x11}, // 9
  {0x11,0x00,0x00,0x00,0x00,0x00,0x1a,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x1d,0x00,0x12,0x00,0x00,0x00,0x11}, // 10
  {0x11,0x12,0x12,0x00,0x1d,0x1d,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x1d,0x1d,0x00,0x12,0x00,0x1d,0x1d,0x11}, // 11
  {0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x11}, // 12
  {0x11,0x00,0x12,0x00,0x1d,0x00,0x12,0x1a,0x12,0x00,0x1d,0x1d,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x00,0x11}, // 13
  {0x11,0x00,0x12,0x00,0x1d,0x00,0x12,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x12,0x1A,0x11}, // 14
  {0x11,0x00,0x12,0x00,0x12,0x12,0x12,0x00,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x00,0x12,0x00,0x11}, // 15
  {0x11,0x00,0x12,0x00,0x00,0x00,0x12,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x12,0x00,0x11}, // 16
  {0x11,0x00,0x12,0x00,0x1d,0x1d,0x12,0x00,0x12,0x00,0x1d,0x1d,0x12,0x00,0x12,0x12,0x12,0x12,0x12,0x00,0x11}, // 17
  {0x11,0x00,0x12,0x09,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x1d,0x00,0x12,0x00,0x11}, // 18
  {0x11,0x00,0x12,0x12,0x12,0x00,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x00,0x1d,0x00,0x1d,0x00,0x12,0x00,0x11}, // 19
  {0x11,0x00,0x00,0x00,0x12,0x09,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1d,0x09,0x00,0x00,0x00,0x00,0x11}, // 20
  {0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11}  // 21
}
};

#endif